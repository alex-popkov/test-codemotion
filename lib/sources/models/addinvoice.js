// This file was autogenerated by idk compile models.
// Please do not edit.

goog.provide( 'test.codemotion.models.AddInvoice' );
goog.provide( 'test.codemotion.models.AddInvoiceDatarow' );

goog.require( 'zz.models.Datarow' );
goog.require( 'zz.models.Dataset' );
goog.require( 'zz.models.enums.FieldType' );

goog.require( 'test.codemotion.models.Products' );


/**
* @param {!zz.models.Dataset} dataset
* @param {?Array.<string>} opt_data
* @extends {zz.models.Datarow}
* @constructor
*/
test.codemotion.models.AddInvoiceDatarow = function( dataset, opt_data ){

    /**
     * @type {string}
     */
    this.customer = undefined;

    /**
     * @type {test.codemotion.models.Products}
     */
    this.products = undefined;

    /**
     * @type {string}
     */
    this.discount = undefined;

    /**
     * @type {number}
     */
    this.total = undefined;

    /**
     * @type {boolean}
     */
    this.showProducts = undefined;

    /**
     * @type {string}
     */
    this.customerId = undefined;



/**
* Call parent constructor.
*/
zz.models.Datarow.call( this, dataset, opt_data );
};

goog.inherits( test.codemotion.models.AddInvoiceDatarow, zz.models.Datarow );

/**
* @param {goog.event.EventTarget=} opt_parent
* @param {Array.<Array>=} opt_data
* @extends {zz.models.Dataset}
* @constructor
*/
test.codemotion.models.AddInvoice = function( opt_parent, opt_data ){

zz.models.Dataset.call( this, opt_parent, opt_data );
};
goog.inherits( test.codemotion.models.AddInvoice, zz.models.Dataset );

/**
* Current dataset row type.
* @constructor
* @overwrite
* @type {test.codemotion.models.AddInvoiceDatarow}
*/
test.codemotion.models.AddInvoice.prototype.DatarowConstructor = test.codemotion.models.AddInvoiceDatarow;

/**
* Return test.codemotion.models.AddInvoiceDatarow schema object.
* @override
* @returns {Object}
*/
test.codemotion.models.AddInvoice.prototype.getDatarowSchema = function( ){

return {
        customer: {
                index: 0,
                type: zz.models.enums.FieldType.STRING,
                required: false
        },
        products: {
                index: 1,
                type: test.codemotion.models.Products,
                required: false
        },
        discount: {
                index: 2,
                type: zz.models.enums.FieldType.STRING,
                required: false
        },
        total: {
                index: 3,
                type: zz.models.enums.FieldType.NUMBER,
                required: false
        },
        showProducts: {
                index: 4,
                type: zz.models.enums.FieldType.BOOLEAN,
                required: false
        },
        customerId: {
                index: 5,
                type: zz.models.enums.FieldType.STRING,
                required: false
        }
};
};